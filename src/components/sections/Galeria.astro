---
import { Image } from 'astro:assets';
import { PROJECT_CATEGORIES } from '../../lib/constants-loader';
import { getProjects } from '../../lib/projects-loader';

const PROJECTS = getProjects();
---

<section class="galeria section-bg-white" id="galeria" aria-labelledby="galeria-title">
  <div class="container">
    <hgroup class="section-header">
      <span class="section-subtitle" aria-hidden="true">Nuestros Proyectos</span>
      <h2 class="section-title" id="galeria-title">Portafolio de Obras</h2>
      <p class="section-description">
        Descubre algunos de nuestros proyectos más destacados, donde la innovación se encuentra con
        la funcionalidad.
      </p>
    </hgroup>

    <nav class="filter-buttons" role="tablist" aria-label="Filtros de categorías de proyectos">
      {
        PROJECT_CATEGORIES.map((categoria) => (
          <button
            class={`filter-button ${categoria === 'todos' ? 'active' : ''}`}
            data-categoria={categoria.toLowerCase()}
            role="tab"
            aria-selected={categoria === 'todos' ? 'true' : 'false'}
            aria-controls="projects-grid"
            id={`filter-${categoria.toLowerCase()}`}
            tabindex={categoria === 'todos' ? '0' : '-1'}
          >
            {categoria === 'todos'
              ? 'Todos'
              : categoria.charAt(0).toUpperCase() + categoria.slice(1)}
          </button>
        ))
      }
    </nav>

    <div 
      class="grid-auto-fit galeria__grid" 
      role="tabpanel" 
      id="projects-grid"
      aria-labelledby="filter-todos"
    >
      {
        PROJECTS.map(proyecto => (
          <article class="proyecto-card card-base card-hover image-zoom" data-categoria={proyecto.category.toLowerCase()}>
            <figure class="proyecto-card__image">
              <Image
                src={proyecto.image}
                alt={`Proyecto ${proyecto.title} - ${proyecto.description}`}
                width={600}
                height={400}
                format="webp"
                quality={80}
                loading="lazy"
                decoding="async"
                sizes="(max-width: 768px) 100vw, (max-width: 1024px) 50vw, 33vw"
                class="proyecto-card__img"
              />
              <figcaption class="image-overlay proyecto-card__overlay">
                <div class="proyecto-card__info">
                  <span class="proyecto-card__categoria" aria-label={`Categoría: ${proyecto.category}`}>{proyecto.category}</span>
                  <h3 class="proyecto-card__titulo">{proyecto.title}</h3>
                  <p class="proyecto-card__descripcion">{proyecto.description}</p>
                  <a 
                    href={`/proyecto/${proyecto.id}`} 
                    class="btn btn-primary btn-sm"
                    aria-label={`Ver detalles del proyecto ${proyecto.title}`}
                  >
                    <svg
                      width="20"
                      height="20"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      aria-hidden="true"
                    >
                      <path d="M15 3h6v6M9 21H3v-6M21 3l-7 7M3 21l7-7" />
                    </svg>
                    <span>Ver Detalles</span>
                  </a>
                </div>
              </figcaption>
            </figure>
          </article>
        ))
      }
    </div>

    <div class="galeria__cta text-center">
      <p class="mb-3">¿Te gustó nuestro trabajo? ¡Conversemos sobre tu proyecto!</p>
      <a href="#cotiza" class="btn btn-primary">
        <span>Cotiza tu Proyecto</span>
        <svg
          width="20"
          height="20"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
        >
          <path d="M5 12h14M12 5l7 7-7 7"></path>
        </svg>
      </a>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const filterButtons = document.querySelectorAll('.filter-button');
    const projectCards = document.querySelectorAll('.proyecto-card');

    console.log('Filter buttons found:', filterButtons.length);
    console.log('Project cards found:', projectCards.length);

    filterButtons.forEach(button => {
      button.addEventListener('click', () => {
        const categoria = button.getAttribute('data-categoria');
        console.log('Filter clicked:', categoria);

        // Actualizar botón activo y atributos ARIA
        filterButtons.forEach(btn => {
          btn.classList.remove('active');
          btn.setAttribute('aria-selected', 'false');
          btn.setAttribute('tabindex', '-1');
        });
        
        button.classList.add('active');
        button.setAttribute('aria-selected', 'true');
        button.setAttribute('tabindex', '0');

        // Filtrar proyectos con animación
        projectCards.forEach(card => {
          const cardCategoria = card.getAttribute('data-categoria');
          const htmlCard = card as HTMLElement;
          
          console.log('Card category:', cardCategoria, 'Filter:', categoria);
          
          if (categoria === 'todos' || cardCategoria === categoria) {
            htmlCard.style.display = 'block';
            // Pequeño delay para la animación
            setTimeout(() => {
              htmlCard.style.opacity = '1';
              htmlCard.style.transform = 'translateY(0)';
            }, 50);
          } else {
            htmlCard.style.opacity = '0';
            htmlCard.style.transform = 'translateY(20px)';
            // Ocultar después de la animación
            setTimeout(() => {
              htmlCard.style.display = 'none';
            }, 300);
          }
        });

        // Actualizar aria-labelledby del grid
        const projectsGrid = document.getElementById('projects-grid');
        if (projectsGrid) {
          projectsGrid.setAttribute('aria-labelledby', `filter-${categoria}`);
        }
      });
    });

    // Inicializar estilos de animación para las cartas
    projectCards.forEach(card => {
      const htmlCard = card as HTMLElement;
      htmlCard.style.transition = 'opacity 0.3s ease, transform 0.3s ease';
    });
  });
</script>

<style>
  /* Estilos específicos únicos de la galería */
  .galeria {
    padding: var(--spacing-2xl) 0;
  }

  /* Estilos específicos para las cartas de proyecto */
  .proyecto-card__image {
    position: relative;
    width: 100%;
    height: 280px;
    overflow: hidden;
    border-radius: var(--border-radius-lg) var(--border-radius-lg) 0 0;
  }

  .proyecto-card__img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    transition: transform var(--transition-slow);
  }

  .proyecto-card:hover .proyecto-card__img {
    transform: scale(1.05);
  }

  .galeria__cta {
    margin-top: var(--spacing-2xl);
    padding: var(--spacing-xl);
    background: white;
    border-radius: var(--border-radius-xl);
    box-shadow: var(--shadow-md);
    text-align: center;
  }

  .galeria__cta p {
    font-size: 1.25rem;
    color: var(--color-neutral-700);
    margin-bottom: var(--spacing-md);
  }
</style>
